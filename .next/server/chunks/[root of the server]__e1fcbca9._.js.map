{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Juan%20C/Desktop/portfolio/src/app/lib/mongodb.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = process.env.MONGODB_URI as string;\nif (!MONGODB_URI) {\n  throw new Error(\"Error: MONGODB_URI no definido\");\n}\n\ninterface Cache {\n  conn: mongoose.Connection | null;\n  promise: Promise<typeof mongoose> | null;\n}\n\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare global {\n  namespace NodeJS {\n    interface Global {\n      _mongooseCache?: Cache;\n    }\n  }\n}\n/* eslint-enable @typescript-eslint/no-namespace */\n\nconst globalNode: NodeJS.Global = global as NodeJS.Global;\nconst cache: Cache = globalNode._mongooseCache || { conn: null, promise: null };\n\nexport async function connectToDB(): Promise<mongoose.Connection> {\n  if (cache.conn) return cache.conn;\n\n  if (!cache.promise) {\n    cache.promise = mongoose.connect(MONGODB_URI, {\n      dbName: \"Porfolio\",\n      bufferCommands: false,\n    });\n  }\n\n  const mongooseObj = await cache.promise;\n  cache.conn = mongooseObj.connection;\n  globalNode._mongooseCache = cache;\n\n  return cache.conn;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAC3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAeA,iDAAiD,GAEjD,MAAM,aAA4B;AAClC,MAAM,QAAe,WAAW,cAAc,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAEvE,eAAe;IACpB,IAAI,MAAM,IAAI,EAAE,OAAO,MAAM,IAAI;IAEjC,IAAI,CAAC,MAAM,OAAO,EAAE;QAClB,MAAM,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC5C,QAAQ;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,cAAc,MAAM,MAAM,OAAO;IACvC,MAAM,IAAI,GAAG,YAAY,UAAU;IACnC,WAAW,cAAc,GAAG;IAE5B,OAAO,MAAM,IAAI;AACnB","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Juan%20C/Desktop/portfolio/src/models/Contact.ts"],"sourcesContent":["import { model, models, Schema } from \"mongoose\";\n\nconst ContactSchema = new Schema(\n  {\n    name: String,\n    surname: String,\n    email: String,\n    message: String,\n  },\n  { collection: \"contact\" }\n);\n\nexport const Contact = models.Contact || model(\"Contact\", ContactSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,SAAM,CAC9B;IACE,MAAM;IACN,SAAS;IACT,OAAO;IACP,SAAS;AACX,GACA;IAAE,YAAY;AAAU;AAGnB,MAAM,UAAU,yGAAA,CAAA,SAAM,CAAC,OAAO,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,WAAW","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Juan%20C/Desktop/portfolio/src/app/api/contact/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { connectToDB } from \"@/app/lib/mongodb\";\nimport { Contact } from \"@/models/Contact\";\nimport nodemailer from \"nodemailer\";\n\nconst transporter = nodemailer.createTransport({\n  host: process.env.SMTP_HOST,\n  port: Number(process.env.SMTP_PORT),\n  secure: process.env.SMTP_SECURE === \"true\",\n  auth: {\n    user: process.env.SMTP_USER,\n    pass: process.env.SMTP_PASS,\n  },\n});\n\nexport async function GET() {\n  try {\n    await connectToDB();\n    const contacts = await Contact.find();\n    return NextResponse.json(contacts, { status: 200 });\n  } catch (error) {\n    console.error(\"Error en el GET /api/contact\", error);\n    return NextResponse.json({ error: \"Error del servidor\" }, { status: 500 });\n  }\n}\n\nexport async function POST(req: Request) {\n  try {\n    const { name, surname, email, message } = await req.json();\n\n    await connectToDB();\n\n    await new Contact({ name, surname, email, message }).save();\n\n    await transporter.sendMail({\n      from: `\"Portfolio \"<${process.env.SMTP_USER}>`,\n      to: email,\n      subject: `Hola, ${name} ,buen dia`,\n      text: `Gracias por contactarme>\n      Recibi tu mensaje: ${message}`,\n      html: `  <h2>Nuevo mensaje de contacto</h2>\n        <p>Gracias por contactarme.Recibi tu mensaje</p>\n        <blockquote>${message}</blockquote>\n        <p>Te responder√© pronto</p>`,\n    });\n\n    return NextResponse.json(\n      { message: \"Mensaje enviado exitosamente\" },\n      { status: 201 }\n    );\n  } catch (error) {\n    console.error(\"Error en el POST /api/contact\", error);\n    return NextResponse.json({ error: \"Error del servidor\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;IAC7C,MAAM,QAAQ,GAAG,CAAC,SAAS;IAC3B,MAAM,OAAO,QAAQ,GAAG,CAAC,SAAS;IAClC,QAAQ,QAAQ,GAAG,CAAC,WAAW,KAAK;IACpC,MAAM;QACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;QAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;IAC7B;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD;QAChB,MAAM,WAAW,MAAM,0HAAA,CAAA,UAAO,CAAC,IAAI;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;YAAE,QAAQ;QAAI;IACnD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC1E;AACF;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,IAAI;QAExD,MAAM,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD;QAEhB,MAAM,IAAI,0HAAA,CAAA,UAAO,CAAC;YAAE;YAAM;YAAS;YAAO;QAAQ,GAAG,IAAI;QAEzD,MAAM,YAAY,QAAQ,CAAC;YACzB,MAAM,CAAC,aAAa,EAAE,QAAQ,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9C,IAAI;YACJ,SAAS,CAAC,MAAM,EAAE,KAAK,UAAU,CAAC;YAClC,MAAM,CAAC;yBACY,EAAE,SAAS;YAC9B,MAAM,CAAC;;oBAEO,EAAE,QAAQ;mCACK,CAAC;QAChC;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA+B,GAC1C;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC1E;AACF","debugId":null}}]
}